/*
=============== 
Fonts
===============
*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans|Roboto:400,700&display=swap");

/*
=============== 
Variables
===============
*/

:root {
  /* change the colors */

  /* dark shades of primary color*/
  --clr-primary-1: #7b3993;
  --clr-primary-2: #8a48a4;
  --clr-primary-3: #a761c3;
  --clr-primary-4: #b57bcc;

  /* primary/main color */
  /* #e9b949 */
  --clr-primary-5: #c598d7;

  /* lighter shades of primary color */
  --clr-primary-6: #d6b6e2;
  --clr-primary-7: #dec5e8;
  --clr-primary-8: #e6d3ee;
  --clr-primary-9: #efe2f4;
  --clr-primary-10: #f7f0f9;

  /* darkest grey - used for headings */
  --clr-grey-1: hsl(209, 61%, 16%);
  --clr-grey-2: hsl(211, 39%, 23%);
  --clr-grey-3: hsl(209, 34%, 30%);
  --clr-grey-4: hsl(209, 28%, 39%);
  /* grey used for paragraphs */
  --clr-grey-5: hsl(210, 22%, 49%);
  --clr-grey-6: hsl(209, 23%, 60%);
  --clr-grey-7: hsl(211, 27%, 70%);
  --clr-grey-8: hsl(210, 31%, 80%);
  --clr-grey-9: hsl(212, 33%, 89%);
  --clr-grey-10: hsl(210, 36%, 96%);
  --clr-white: #fff;

  /* Change the fonts */
  --ff-primary: "Roboto", sans-serif;
  --ff-secondary: "Open Sans", sans-serif;
  --transition: all 0.3s linear;
  --spacing: 0.25rem;
  --radius: 0.5rem;
  --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  --max-width: 1170px;
}
/*
=============== 
Global Styles
===============
*/

*,
::after,
::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: var(--ff-secondary);
  background: var(--clr-white);
  color: var(--clr-grey-1);
  line-height: 1.5;
  font-size: 0.875rem;
}
ul {
  list-style-type: none;
}
a {
  text-decoration: none;
}
img:not(.nav-logo) {
  width: 100%;
  display: block;
}

h1,
h2,
h3,
h4 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
  font-family: var(--ff-primary);
  letter-spacing: var(--spacing);
}
h1 {
  font-size: 3rem;
}
h2 {
  font-size: 2rem;
}
h3 {
  font-size: 1.25rem;
}
h4 {
  font-size: 0.875rem;
}
p {
  margin-bottom: 1.25rem;
  color: var(--clr-grey-5);
}
@media screen and (min-width: 800px) {
  h1 {
    font-size: 4rem;
  }
  h2 {
    font-size: 2.5rem;
  }
  h3 {
    font-size: 1.75rem;
  }
  h4 {
    font-size: 1rem;
  }
  body {
    font-size: 1rem;
  }
  h1,
  h2,
  h3,
  h4 {
    line-height: 1;
  }
}
/*  global classes */

.btn {
  text-transform: uppercase;
  background: var(--clr-primary-5);
  color: var(--clr-primary-1);
  padding: 0.375rem 0.75rem;
  letter-spacing: var(--spacing);
  display: inline-block;
  font-weight: 700;
  transition: var(--transition);
  font-size: 0.875rem;
  border: 2px solid transparent;
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  border-radius: var(--radius);
}
.btn:hover {
  color: var(--clr-primary-1);
  background: var(--clr-primary-7);
}
/* section */
.section {
  padding: 5rem 0;
}

.section-container {
  width: 90vw;
  margin: 0rem auto;
  padding: 0rem auto 3rem;
  max-width: 1170px;
}
@media screen and (min-width: 992px) {
  .section-container {
    width: 95vw;
  }
}

.underline {
  width: 5rem;
  height: 0.25rem;
  margin-bottom: 1.25rem;
  background: var(--clr-primary-5);
  margin-left: auto;
  margin-right: auto;
}

.section-title {
  margin-bottom: 4rem;
  text-align: center;
}

.bg-grey {
  background: var(--clr-grey-10);
}

/* added during recording */

/*
=============== 
Navbar
===============
*/
.nav-links {
  display: none;
}
.nav {
  height: 5rem;
  padding: 1rem;
  display: grid;
  align-items: center;
  transition: var(--transition);
}
.nav-container {
  width: 100%;
  max-width: 1170px;
  margin: 0 auto;
}
.nav-header {
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
}
.nav-btn {
  background: transparent;
  border-color: transparent;
  color: var(--clr-primary-5);
  font-size: 2rem;
  cursor: pointer;
  justify-self: end;
}

@media screen and (min-width: 768px) {
  .nav {
    background: var(--clr-primary-10);
  }
  .nav-btn {
    display: none;
  }
  .nav-links {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    justify-items: center;
    -moz-column-gap: 2rem;
    column-gap: 2rem;
    justify-self: end;
  }
  .nav-links a {
    text-transform: capitalize;
    color: var(--clr-grey-1);
    font-weight: bold;
    letter-spacing: var(--spacing);
    transition: var(--transition);
  }
  .nav-links a:hover {
    color: var(--clr-primary-5);
  }
  .nav-container {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
  }
}

/* Fixing Nav Bar to Top. Executed in the JavaScript file */
.navbar-fixed {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background: var(--clr-white);
  z-index: 2;
  box-shadow: var(--light-shadow);
}

/*
=============== 
Sidebar
===============
*/

.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--clr-grey-10);
  z-index: 4;
  display: grid;
  /* align-items: center;
  justify-content: center; */
  /* place-items does both alignment and justification */
  place-items: center;
  transition: var(--transition);
  /* transition done in JavaScript later */
  transform: translateX(100%);
}

.show-sidebar {
  transform: translateX(0);
}

.sidebar-links {
  text-align: center;
}

.sidebar-links a {
  font-size: 2rem;
  text-transform: capitalize;
  transition: var(--transition);
  color: var(--clr-grey-5);
  letter-spacing: var(--spacing);
  display: inline-block;
  margin-bottom: 1.5rem;
}

.sidebar-links a:hover {
  color: var(--clr-primary-5);
}

.socials-list {
  display: grid;
  margin-top: 0.5rem;
  grid-template-columns: auto auto;
  -moz-column-gap: 1rem;
  column-gap: 1rem;
  justify-items: center;
  justify-content: center;
}

.social-icon {
  font-size: 1.5rem;
  color: var(--clr-grey-1);
  transition: var(--transition);
}

.social-icon:hover {
  color: var(--clr-primary-5);
}

.close-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 2rem;
  background: transparent;
  border: transparent;
  transition: var(--transition);
  color: var(--clr-grey-1);
  cursor: pointer;
}

.close-btn:hover {
  color: var(--clr-primary-5);
}

/*
=============== 
Top
===============
*/
/* underline added to globals */
.top .underline {
  margin-bottom: 0.5rem;
  grid-template-columns: repeat(2, 0.25fr);
  margin-left: 0;
}

.top-img {
  display: none;
}

.top {
  background: var(--clr-primary-10);
  padding-bottom: 5rem;
}

.top-container {
  min-height: calc(100vh - 5rem);
  display: grid;
  place-items: center;
}

.top-info h4 {
  letter-spacing: 0;
  color: var(--clr-grey-5);
}

.top-icons {
  /* overwriting socials-list values to make it fit better */
  margin-top: 2rem;
  grid-template-columns: auto auto auto auto auto;
  -moz-column-gap: 1rem;
  column-gap: 1rem;
  justify-items: start;
  justify-content: start;
}

.top-btn {
  margin-top: 1.25rem;
}

@media screen and (min-width: 992px) {
  .top-img {
    display: block;
    /* set as relative, so that the ::before position absolute works */
    position: relative;
  }
  .top-container {
    grid-template-columns: 1fr 1fr;
  }

  /* applying to both top and about images */
  .top-img::before,
  .about-img::before {
    /* content is a required field, so we set it as an empty string */
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    border: 0.25rem solid var(--clr-primary-5);
    /* used to offset the border, making it #aesthetic */
    top: 2rem;
    right: -2rem;
    border-radius: var(--radius);
  }
}

/* placed outside of the media query because we want this styling on the about photo constantly
   and when the screen is small, the top photo is not displayed */
.top-photo {
  max-width: 20rem;
  max-height: 25rem;
  -o-object-fit: cover;
  object-fit: cover;
  border-radius: var(--radius);
  /* set as relative, so that the ::before position absolute works */
  position: relative;
}

/*
=============== 
About
===============
*/
/* section title added to globals */
.about-title {
  text-align: left;
  margin-bottom: 2rem;
}

.about-title .underline {
  margin-left: 0;
}

/* parent container */
.about-container {
  display: grid;
  gap: 3rem 2rem;
}

.about-img {
  justify-self: center;
}

@media screen and (min-width: 992px) {
  .about-container {
    grid-template-columns: 1fr 1fr;
  }

  .about-img {
    position: relative;
  }
  .about-img::before {
    left: -2rem;
    max-height: 25rem;
  }

  .about-info {
    align-self: center;
  }
}

/*
=============== 
Services
===============
*/
.service {
  background: var(--clr-white);
  padding: 3rem 1.5rem;
  margin-bottom: 2rem;
  border-radius: var(--radius);
  text-align: center;
  transition: var(--transition);
}

.service-icon {
  font-size: 2rem;
  /* using margin instead of CSS grid for small screen just in case a phone doesn't support CSS grid */
  margin-bottom: 1.5rem;
}

.service .underline {
  width: 3rem;
  height: 0.12rem;
  transition: var(--transition);
}

.service p {
  transition: var(--transition);
}

.service:hover {
  background: var(--clr-primary-5);
  color: var(--clr-white);
}

.service:hover p {
  color: var(--clr-white);
}

.service:hover .underline {
  background: var(--clr-white);
}

/* medium sized screen */
@media screen and (min-width: 676px) {
  .services-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    -moz-column-gap: 2rem;
    column-gap: 2rem;
  }
}

/* large sized screen */
@media screen and (min-width: 992px) {
  .services-container {
    /* you only need to change this. the rest of the stuff is inherited from the 676px one */
    grid-template-columns: 1fr 1fr 1fr;
  }
}

/*
=============== 
Projects
===============
*/

.projects-text {
  width: 85vw;
  max-width: 30rem;
  margin: 0 auto;
}

.project {
  position: relative;
  background: var(--clr-grey-4);
  border-radius: var(--radius);
  margin-bottom: 2rem;
}

.project-info {
  text-align: center;
  color: var(--clr-white);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: var(--transition);
  opacity: 0;
}

.project-info p {
  text-transform: capitalize;
  color: var(--clr-white);
}

.project:hover .project-info {
  opacity: 1;
}

.project-img {
  transition: var(--transition);
  border-radius: var(--radius);
  height: 15rem;
  -o-object-fit: cover;
  object-fit: cover;
}

.project:hover .project-img {
  opacity: 0.1;
}

.project::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0.25rem solid var(--clr-white);
  border-radius: var(--radius);
  transition: var(--transition);
  opacity: 0;
}

/* target the ::after pseudo-class as you hover */
.project:hover::after {
  opacity: 1;
  transform: scale(0.8);
}

@media screen and (min-width: 676px) {
  .projects-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    -moz-column-gap: 2rem;
    column-gap: 2rem;
  }
}

@media screen and (min-width: 992px) {
  .projects-container {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* I don't care for this grid layout lol */
/*
@media screen and (min-width: 1170px) {
  .projects-container {
    grid-template-rows: 200px 200px;
    gap: 1rem;
    grid-template-areas:
      "a b b"
      "a c d";
  }
  .project-img {
    height: 100%;
  }
  //Parent class needs to span 100% height since this is where the images are stored (<a> has class project)
  .project {
    height: 100%;
  }
  .project-1 {
    grid-area: a;
  }
  .project-2 {
    grid-area: b;
  }
  .project-3 {
    grid-area: c;
  }
  .project-4 {
    grid-area: d;
  }
}
*/

/*
=============== 
Connect
===============
*/

.connect {
  min-height: 40vh;
  position: relative;
  padding: 10rem 0 5rem 0;
  margin: 5rem 0;
}

.video-host {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  /* set the Z-index so that it stays behind the overlay*/
  z-index: -2;
}

/* video overlay */

.connect::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--clr-white);
  opacity: 0.7;
  /* Normally takes place even after the video banner (below) because it is an ::after pseudo-class */
  /* so we set the Z-index so that it stays behind the banner */
  z-index: -1;
}

.connect {
  display: grid;
  place-items: center;
}

.video-banner .section-title {
  margin-bottom: 2rem;
}

.video-text {
  max-width: 30rem;
}

.video-banner {
  background: var(--clr-primary-10);
  padding: 3rem 5rem 12rem 5rem;
  text-align: center;
  -webkit-clip-path: polygon(
    0% 0%,
    100% 0%,
    100% 75%,
    75% 75%,
    75% 100%,
    50% 75%,
    0% 75%
  );
  clip-path: polygon(
    0% 0%,
    100% 0%,
    100% 75%,
    75% 75%,
    75% 100%,
    50% 75%,
    0% 75%
  );
}

.connect {
  -webkit-clip-path: polygon(
    50% 0%,
    100% 10%,
    100% 90%,
    50% 100%,
    0 90%,
    0 10%
  );
  clip-path: polygon(50% 0%, 100% 10%, 100% 90%, 50% 100%, 0 90%, 0 10%);
}

/*
=============== 
Skills
===============
*/

@media screen and (min-width: 768px) {
  .skills-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    -moz-column-gap: 2rem;
    column-gap: 2rem;
  }
}

.skills {
  /* good to have multiple shades in case something doesn't work super great */
  background: var(--clr-primary-9);
}

.skills h3 {
  margin: 1.5rem 0;
  /* color: var(--clr-primary-1); */
}

.skill {
  margin-bottom: 1.25rem;
}

.skill p {
  margin-bottom: 0.5rem;
  text-transform: capitalize;
  /* color: var(--clr-primary-1); */
}

.skill-bar {
  background: var(--clr-white);
  height: 1rem;
  width: 100%;
  border-radius: var(--radius);
  position: relative;
}

.skill-value {
  position: absolute;
  top: 0;
  left: 0;
  background: var(--clr-primary-5);
  height: 100%;
  /* default is set at 50% */
  width: 50%;
  border-radius: var(--radius);
}

.value-70 {
  width: 70%;
}

.value-80 {
  width: 80%;
}

.skill-text {
  position: absolute;
  top: -2rem;
  left: 50%;
  transform: translateX(-50%);
}

.skill-text-70 {
  left: 70%;
}

.skill-text-80 {
  left: 80%;
}

/*
=============== 
Timeline
===============
*/

.timeline-container {
  width: 80vw;
  max-width: 40rem;
}

.timeline-item {
  border-top: 2px dashed var(--clr-primary-5);
  margin: 0;
  padding: 4rem 2rem;
  /* used for the numbers (the ones in the <p> tag) */
  position: relative;
}

.timeline p {
  margin-bottom: 0;
}

/* pseudo-class that will match element based on position in a group of siblings */
/* here it's looking at the HTML and applying the style to every even numbered element (2nd, 4th, etc.) */
.timeline-item:nth-child(even) {
  border-left: 2px dashed var(--clr-primary-5);
  border-top-left-radius: 2rem;
  border-bottom-left-radius: 2rem;
  /* offsetting the border so that it flushes with the odd-numbered borders */
  margin-right: 2rem;
  padding-right: 0;
}

/* here it's looking at the HTML and applying the style to every odd numbered element (1st, 3rd, etc.) */
.timeline-item:nth-child(odd) {
  border-right: 2px dashed var(--clr-primary-5);
  border-top-right-radius: 2rem;
  border-bottom-right-radius: 2rem;
  /* offsetting the border so that it flushes with the odd-numbered borders */
  margin-left: 2rem;
  padding-left: 0;
}

.timeline-item:first-child {
  border-top: 0;
  border-top-right-radius: 0;
}

.timeline-item:last-child {
  border-bottom: 0;
  border-bottom-left-radius: 0;
}

.number {
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  margin-bottom: 0;
  background: var(--clr-primary-5);
  width: 2rem;
  height: 2rem;
  border-radius: 50%;

  /* hack/shortcut to place the number in the center of the circle */
  display: grid;
  place-items: center;

  color: var(--clr-primary-1);
  font-weight: bold;
}

.timeline-item:nth-child(even) .number {
  left: 0;
}

.timeline-item:nth-child(odd) .number {
  right: 0;
  transform: translate(50%, -50%);
}

/*
=============== 
Blog
===============
*/

.blog {
  background: var(--clr-grey-10);
}

.card {
  height: 27rem;
  position: relative;
  perspective: 15000px;
}

.card-side {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  transition: all 0.5s linear;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: var(--radius);
  /* apparently these are needed for iPhone? idfk */
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  visibility: visible;
}

.card-info {
  padding: 1rem 1.5rem;
}

.card-front {
  background: var(--clr-white);
}

.card-back {
  background: var(--clr-primary-10);
  transform: rotateY(180deg);
  display: grid;
  place-items: center;
}

.card:hover .card-front {
  transform: rotateY(-180deg);
}

.card:hover .card-back {
  transform: rotateY(0);
}

.card-front img {
  height: 13rem;
  -o-object-fit: cover;
  object-fit: cover;
  /* we just want the top ones to be round, ig */
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}

.card-footer {
  display: grid;
  /* auto first because the image (see below) has its own width */
  grid-template-columns: auto 1fr;
  align-items: center;
}

.card-footer img {
  width: 2rem;
  height: 2rem;
  -o-object-fit: cover;
  object-fit: cover;
  border-radius: 50%;
}

.card-footer p {
  margin-bottom: 0;
  text-transform: uppercase;
  justify-self: end;
  color: var(--clr-primary-5);
  font-size: 0.85rem;
}

.blog-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));
  gap: 3rem 1rem;
}

/*
=============== 
Footer
===============
*/
.footer {
  padding-bottom: 2rem;
  background: #222;
  display: grid;
  /* place-items: each item individually needs to be placed in the center */
  /* place-content: each item collectively, as a group, will be placed in the center */
  place-items: center;
}

.footer .socials-list {
  margin-bottom: 2rem;
}

.footer .social-icon {
  color: var(--clr-primary-5);
}

.footer .social-icon:hover {
  color: var(--clr-primary-10);
}

.footer p {
  font-size: 1.5rem;
  color: var(--clr-primary-5);
  /* text-transform: capitalize; */
}
/*
=============== 
Single Page
===============
*/

.single-page {
  background: var(--clr-primary-10);
  /* 100% of the height of the page minus the height of the navbar minus 198px for... some reason */
  min-height: calc(100vh - 5rem - 198px);
}

.page-info {
  max-width: 700px;
}

.page-info a {
  color: var(--clr-primary-5);
  transition: var(--transition);
}

.page-info a:hover {
  color: var(--clr-primary-1);
  transition: var(--transition);
}

/*
=============== 
Products Page
===============
*/
.portfolio-top {
  height: 40vh;
  background: var(--clr-primary-10);
  display: grid;
  place-items: center;
}

.portfolio-top .section-title {
  margin-bottom: 0;
}

.single-project {
  background: var(--clr-grey-10);
  border-radius: var(--radius);
}

.case-study img {
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}

/* set as relative so that the project-icon, when set as absolute, will act as intended */
.case-study {
  position: relative;
}

.project-icon {
  position: absolute;
  font-size: 1.75rem;
  /* place in bottom center of image */
  bottom: 0;
  left: 50%;
  transform: translate(-50%, 50%);

  /* used to create the little bubble around the icon */
  width: 4rem;
  height: 4rem;
  display: grid;
  place-items: center;
  background: var(--clr-primary-5);
  border-radius: 50%;
  color: var(--clr-primary-1);
  border: 0.375rem solid var(--clr-grey-10);
}

.case-study-details {
  padding: 2rem 1.5rem;
}

.case-study-footer {
  display: grid;
  grid-template-columns: 1fr 1fr;
  color: var(--clr-primary-1);
}

.case-study-footer a {
  color: var(--clr-primary-5);
  text-transform: capitalize;
  transition: var(--transition);
  justify-self: end;
}

.case-study-footer a:hover {
  color: var(--clr-primary-1);
}

.portfolio-container {
  display: grid;
  /* auto-fill says: "Based on the value in the next arg (minimum of 330px in this case), */
  /* can I add more columns, regardless of how many items there are?" */
  /* in this case, auto-fill will keep adding 330px wide columns until there is no more space */
  grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));
  gap: 3rem 1rem;
}
